import Image from 'next/image'
import { Inter } from 'next/font/google'
import { signOut } from "next-auth/react"
// import { AnimatePresence } from "framer-motion";
import { getSession, useSession } from "next-auth/react";
import Head from "next/head";
import { useRouter } from "next/router";
import Header from "../components/Header"
import Sidebar from '@/components/Sidebar';
import Feed from '@/components/Feed';
import { AnimatePresence } from "framer-motion";
import Modal from '../components/Modal';
import { modalState, modalTypeState } from "../atoms/modalAtom";
import { useRecoilState } from 'recoil';
// import { useRecoilState } from "recoil";
// import { modalState, modalTypeState } from "../atoms/modalAtom";
// import Feed from "../components/Feed";
// import Header from "../components/Header";
// import Modal from "../components/Modal";
// import Sidebar from "../components/Sidebar";
// import Widgets from "../components/Widgets";
// import { connectToDatabase } from "../util/mongodb";
//import styles from '@/styles/Home.module.css'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const [modalOpen,setModalOpen] = useRecoilState(modalState);
  const [modalType,setModalType] = useRecoilState(modalTypeState);
  const router = useRouter();
  const {status} = useSession({
    required: true,
    onUnauthenticated(){
      //the user is not authenticated, we handled it here
      router.push("/home");
    },
  });
  
  return (
    <div className="bg-[#F3F2EF] dark:bg-black dark:text-white h-screen overflow-y-scroll md:space-y-6">
      <Head>
        <title>Feed | GeekBangla</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <main className="flex justify-center gap-x-5 px-4 sm:px-12">
        <div className="flex flex-col md:flex-row gap-5">
          {/* sidebar */}
          <Sidebar/>
          {/* feed */}
          <Feed />
        </div>
        
        {/* widgets */}
        <AnimatePresence>
          {modalOpen && (
            <Modal handleClose={() => setModalOpen(false)} type={modalType} />
          )}
        </AnimatePresence>
      </main>
      
    </div>
  )
}

export async function middleware(req) {
  const { pathname, origin } = req.nextUrl;

  if (pathname === '/') {
    const session = await getToken({
      req,
      secret: process.env.JWT_SECRET,
      secureCookie: process.env.NODE_ENV === 'production',
    });
    if (!session) return NextResponse.redirect(`${origin}/home`);
  }
}

